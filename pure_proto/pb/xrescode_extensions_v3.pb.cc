// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xrescode_extensions_v3.proto

#include "xrescode_extensions_v3.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace xrescode {
constexpr xrescode_index::xrescode_index(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fields_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , file_mapping_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_type_(0)

  , allow_not_found_(false){}
struct xrescode_indexDefaultTypeInternal {
  constexpr xrescode_indexDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~xrescode_indexDefaultTypeInternal() {}
  union {
    xrescode_index _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT xrescode_indexDefaultTypeInternal _xrescode_index_default_instance_;
constexpr xrescode_loader::xrescode_loader(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : indexes_()
  , tags_()
  , file_list_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , file_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_field_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , class_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct xrescode_loaderDefaultTypeInternal {
  constexpr xrescode_loaderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~xrescode_loaderDefaultTypeInternal() {}
  union {
    xrescode_loader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT xrescode_loaderDefaultTypeInternal _xrescode_loader_default_instance_;
}  // namespace xrescode
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_xrescode_5fextensions_5fv3_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_xrescode_5fextensions_5fv3_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_xrescode_5fextensions_5fv3_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_xrescode_5fextensions_5fv3_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, name_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, fields_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, index_type_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, file_mapping_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_index, allow_not_found_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, file_list_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, file_path_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, code_field_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, indexes_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, tags_),
  PROTOBUF_FIELD_OFFSET(::xrescode::xrescode_loader, class_name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xrescode::xrescode_index)},
  { 10, -1, sizeof(::xrescode::xrescode_loader)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::xrescode::_xrescode_index_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::xrescode::_xrescode_loader_default_instance_),
};

const char descriptor_table_protodef_xrescode_5fextensions_5fv3_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034xrescode_extensions_v3.proto\022\010xrescode"
  "\032 google/protobuf/descriptor.proto\"\220\001\n\016x"
  "rescode_index\022\014\n\004name\030\001 \001(\t\022\016\n\006fields\030\002 "
  "\003(\t\0221\n\nindex_type\030\003 \001(\0162\035.xrescode.xresc"
  "ode_index_type\022\024\n\014file_mapping\030\004 \001(\t\022\027\n\017"
  "allow_not_found\030\005 \001(\010\"\233\001\n\017xrescode_loade"
  "r\022\021\n\tfile_list\030e \001(\t\022\021\n\tfile_path\030f \001(\t\022"
  "\022\n\ncode_field\030g \001(\t\022*\n\007indexes\030\311\001 \003(\0132\030."
  "xrescode.xrescode_index\022\r\n\004tags\030\255\002 \003(\t\022\023"
  "\n\nclass_name\030\221\003 \001(\t*Y\n\023xrescode_index_ty"
  "pe\022\017\n\013EN_INDEX_KV\020\000\022\017\n\013EN_INDEX_KL\020\001\022\017\n\013"
  "EN_INDEX_IV\020\002\022\017\n\013EN_INDEX_IL\020\003:K\n\006loader"
  "\022\037.google.protobuf.MessageOptions\030\307\n \003(\013"
  "2\031.xrescode.xrescode_loaderb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_xrescode_5fextensions_5fv3_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_xrescode_5fextensions_5fv3_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_xrescode_5fextensions_5fv3_2eproto = {
  false, false, 555, descriptor_table_protodef_xrescode_5fextensions_5fv3_2eproto, "xrescode_extensions_v3.proto", 
  &descriptor_table_xrescode_5fextensions_5fv3_2eproto_once, descriptor_table_xrescode_5fextensions_5fv3_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_xrescode_5fextensions_5fv3_2eproto::offsets,
  file_level_metadata_xrescode_5fextensions_5fv3_2eproto, file_level_enum_descriptors_xrescode_5fextensions_5fv3_2eproto, file_level_service_descriptors_xrescode_5fextensions_5fv3_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_xrescode_5fextensions_5fv3_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_xrescode_5fextensions_5fv3_2eproto);
  return descriptor_table_xrescode_5fextensions_5fv3_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_xrescode_5fextensions_5fv3_2eproto(&descriptor_table_xrescode_5fextensions_5fv3_2eproto);
namespace xrescode {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* xrescode_index_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_xrescode_5fextensions_5fv3_2eproto);
  return file_level_enum_descriptors_xrescode_5fextensions_5fv3_2eproto[0];
}
bool xrescode_index_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class xrescode_index::_Internal {
 public:
};

xrescode_index::xrescode_index(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  fields_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xrescode.xrescode_index)
}
xrescode_index::xrescode_index(const xrescode_index& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  file_mapping_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_mapping().empty()) {
    file_mapping_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_mapping(), 
      GetArena());
  }
  ::memcpy(&index_type_, &from.index_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_not_found_) -
    reinterpret_cast<char*>(&index_type_)) + sizeof(allow_not_found_));
  // @@protoc_insertion_point(copy_constructor:xrescode.xrescode_index)
}

void xrescode_index::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
file_mapping_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&index_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&allow_not_found_) -
    reinterpret_cast<char*>(&index_type_)) + sizeof(allow_not_found_));
}

xrescode_index::~xrescode_index() {
  // @@protoc_insertion_point(destructor:xrescode.xrescode_index)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void xrescode_index::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_mapping_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void xrescode_index::ArenaDtor(void* object) {
  xrescode_index* _this = reinterpret_cast< xrescode_index* >(object);
  (void)_this;
}
void xrescode_index::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void xrescode_index::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void xrescode_index::Clear() {
// @@protoc_insertion_point(message_clear_start:xrescode.xrescode_index)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  name_.ClearToEmpty();
  file_mapping_.ClearToEmpty();
  ::memset(&index_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_not_found_) -
      reinterpret_cast<char*>(&index_type_)) + sizeof(allow_not_found_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* xrescode_index::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_index.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_fields();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_index.fields"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .xrescode.xrescode_index_type index_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_index_type(static_cast<::xrescode::xrescode_index_type>(val));
        } else goto handle_unusual;
        continue;
      // string file_mapping = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_file_mapping();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_index.file_mapping"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allow_not_found = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          allow_not_found_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* xrescode_index::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xrescode.xrescode_index)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_index.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string fields = 2;
  for (int i = 0, n = this->_internal_fields_size(); i < n; i++) {
    const auto& s = this->_internal_fields(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_index.fields");
    target = stream->WriteString(2, s, target);
  }

  // .xrescode.xrescode_index_type index_type = 3;
  if (this->index_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_index_type(), target);
  }

  // string file_mapping = 4;
  if (this->file_mapping().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_mapping().data(), static_cast<int>(this->_internal_file_mapping().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_index.file_mapping");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_file_mapping(), target);
  }

  // bool allow_not_found = 5;
  if (this->allow_not_found() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_allow_not_found(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrescode.xrescode_index)
  return target;
}

size_t xrescode_index::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrescode.xrescode_index)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fields = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(fields_.size());
  for (int i = 0, n = fields_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      fields_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string file_mapping = 4;
  if (this->file_mapping().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_mapping());
  }

  // .xrescode.xrescode_index_type index_type = 3;
  if (this->index_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_index_type());
  }

  // bool allow_not_found = 5;
  if (this->allow_not_found() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void xrescode_index::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrescode.xrescode_index)
  GOOGLE_DCHECK_NE(&from, this);
  const xrescode_index* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<xrescode_index>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrescode.xrescode_index)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrescode.xrescode_index)
    MergeFrom(*source);
  }
}

void xrescode_index::MergeFrom(const xrescode_index& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrescode.xrescode_index)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.file_mapping().size() > 0) {
    _internal_set_file_mapping(from._internal_file_mapping());
  }
  if (from.index_type() != 0) {
    _internal_set_index_type(from._internal_index_type());
  }
  if (from.allow_not_found() != 0) {
    _internal_set_allow_not_found(from._internal_allow_not_found());
  }
}

void xrescode_index::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrescode.xrescode_index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xrescode_index::CopyFrom(const xrescode_index& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrescode.xrescode_index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xrescode_index::IsInitialized() const {
  return true;
}

void xrescode_index::InternalSwap(xrescode_index* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fields_.InternalSwap(&other->fields_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  file_mapping_.Swap(&other->file_mapping_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(xrescode_index, allow_not_found_)
      + sizeof(xrescode_index::allow_not_found_)
      - PROTOBUF_FIELD_OFFSET(xrescode_index, index_type_)>(
          reinterpret_cast<char*>(&index_type_),
          reinterpret_cast<char*>(&other->index_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata xrescode_index::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class xrescode_loader::_Internal {
 public:
};

xrescode_loader::xrescode_loader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  indexes_(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xrescode.xrescode_loader)
}
xrescode_loader::xrescode_loader(const xrescode_loader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      indexes_(from.indexes_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_list_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_list().empty()) {
    file_list_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_list(), 
      GetArena());
  }
  file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_path().empty()) {
    file_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_path(), 
      GetArena());
  }
  code_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code_field().empty()) {
    code_field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code_field(), 
      GetArena());
  }
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_class_name().empty()) {
    class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_class_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:xrescode.xrescode_loader)
}

void xrescode_loader::SharedCtor() {
file_list_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

xrescode_loader::~xrescode_loader() {
  // @@protoc_insertion_point(destructor:xrescode.xrescode_loader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void xrescode_loader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_list_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void xrescode_loader::ArenaDtor(void* object) {
  xrescode_loader* _this = reinterpret_cast< xrescode_loader* >(object);
  (void)_this;
}
void xrescode_loader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void xrescode_loader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void xrescode_loader::Clear() {
// @@protoc_insertion_point(message_clear_start:xrescode.xrescode_loader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexes_.Clear();
  tags_.Clear();
  file_list_.ClearToEmpty();
  file_path_.ClearToEmpty();
  code_field_.ClearToEmpty();
  class_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* xrescode_loader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file_list = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_file_list();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_loader.file_list"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file_path = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_file_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_loader.file_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string code_field = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_code_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_loader.code_field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .xrescode.xrescode_index indexes = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_indexes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<1610>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string tags = 301;
      case 301:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_loader.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<2410>(ptr));
        } else goto handle_unusual;
        continue;
      // string class_name = 401;
      case 401:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_class_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "xrescode.xrescode_loader.class_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* xrescode_loader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xrescode.xrescode_loader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_list = 101;
  if (this->file_list().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_list().data(), static_cast<int>(this->_internal_file_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_loader.file_list");
    target = stream->WriteStringMaybeAliased(
        101, this->_internal_file_list(), target);
  }

  // string file_path = 102;
  if (this->file_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_loader.file_path");
    target = stream->WriteStringMaybeAliased(
        102, this->_internal_file_path(), target);
  }

  // string code_field = 103;
  if (this->code_field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code_field().data(), static_cast<int>(this->_internal_code_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_loader.code_field");
    target = stream->WriteStringMaybeAliased(
        103, this->_internal_code_field(), target);
  }

  // repeated .xrescode.xrescode_index indexes = 201;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_indexes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(201, this->_internal_indexes(i), target, stream);
  }

  // repeated string tags = 301;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_loader.tags");
    target = stream->WriteString(301, s, target);
  }

  // string class_name = 401;
  if (this->class_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_class_name().data(), static_cast<int>(this->_internal_class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "xrescode.xrescode_loader.class_name");
    target = stream->WriteStringMaybeAliased(
        401, this->_internal_class_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrescode.xrescode_loader)
  return target;
}

size_t xrescode_loader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrescode.xrescode_loader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xrescode.xrescode_index indexes = 201;
  total_size += 2UL * this->_internal_indexes_size();
  for (const auto& msg : this->indexes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string tags = 301;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // string file_list = 101;
  if (this->file_list().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_list());
  }

  // string file_path = 102;
  if (this->file_path().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  // string code_field = 103;
  if (this->code_field().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code_field());
  }

  // string class_name = 401;
  if (this->class_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_class_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void xrescode_loader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrescode.xrescode_loader)
  GOOGLE_DCHECK_NE(&from, this);
  const xrescode_loader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<xrescode_loader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrescode.xrescode_loader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrescode.xrescode_loader)
    MergeFrom(*source);
  }
}

void xrescode_loader::MergeFrom(const xrescode_loader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrescode.xrescode_loader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indexes_.MergeFrom(from.indexes_);
  tags_.MergeFrom(from.tags_);
  if (from.file_list().size() > 0) {
    _internal_set_file_list(from._internal_file_list());
  }
  if (from.file_path().size() > 0) {
    _internal_set_file_path(from._internal_file_path());
  }
  if (from.code_field().size() > 0) {
    _internal_set_code_field(from._internal_code_field());
  }
  if (from.class_name().size() > 0) {
    _internal_set_class_name(from._internal_class_name());
  }
}

void xrescode_loader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrescode.xrescode_loader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xrescode_loader::CopyFrom(const xrescode_loader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrescode.xrescode_loader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xrescode_loader::IsInitialized() const {
  return true;
}

void xrescode_loader::InternalSwap(xrescode_loader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  indexes_.InternalSwap(&other->indexes_);
  tags_.InternalSwap(&other->tags_);
  file_list_.Swap(&other->file_list_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  file_path_.Swap(&other->file_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_field_.Swap(&other->code_field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  class_name_.Swap(&other->class_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata xrescode_loader::GetMetadata() const {
  return GetMetadataStatic();
}

PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::xrescode::xrescode_loader >, 11, false >
  loader(kLoaderFieldNumber, ::xrescode::xrescode_loader::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace xrescode
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::xrescode::xrescode_index* Arena::CreateMaybeMessage< ::xrescode::xrescode_index >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xrescode::xrescode_index >(arena);
}
template<> PROTOBUF_NOINLINE ::xrescode::xrescode_loader* Arena::CreateMaybeMessage< ::xrescode::xrescode_loader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xrescode::xrescode_loader >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
